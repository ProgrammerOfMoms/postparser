{"version":3,"sources":["components/Login/Login.module.css","components/Poster/Poster.module.css","assets/Brend.png","api/api.js","components/Login/Login.jsx","routes/PrivateRoute.jsx","components/Preloader/Preloader.jsx","components/Poster/Poster.jsx","components/Reg/Reg.jsx","App.js","serviceWorker.js","index.js","App.module.css","components/Reg/Reg.module.css"],"names":["module","exports","axiosAllowAny","axios","create","baseURL","timeout","headers","interceptors","response","use","res","error","Promise","reject","axiosAuth","getPartHeaders","Cookies","get","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginForm","props","name","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","valuePropName","type","htmlType","className","href","Login","useState","localStorage","getItem","redirect","setRedirect","to","css","container","config","post","username","password","then","status","setItem","data","token","catch","err","alert","PrivateRoute","Component","component","rest","auth","is_auth","render","Preloader","style","id","in","stdDeviation","RangePicker","DatePicker","moment","locale","FilterForm","Form","useForm","form","formItemLayout","buttonItemLayout","onChange","onQueryChange","placeholder","size","inputReadOnly","onCalendarChange","min","max","onCountChange","Poster","posts","setPosts","count","setCount","startTime","setStartTime","endTime","setEndTime","query","setQuery","is_show","setShow","preloader","setPreloader","start","setStart","end","setEnd","getTitle","v","console","log","title","target","Math","abs","owner_id","unix_time","date","Date","hours","getHours","minutes","getMinutes","day","getDate","Number","month","getMonth","getFullYear","substr","unixToDate","getMaxPhoto","array","length","reduce","a","b","height","onToggleForm","e","currentTarget","value","dates","datesStrings","getAllHeaders","slug","removeItem","onClick","disabled","btn","cards_block","animation","slice","map","i","key","card","card_content","text","attachments","attach","av","ai","photo_container","photo","sizes","url","src","pagination","defaultCurrent","defaultPageSize","s","$","animate","scrollTop","total","RegForm","dependencies","getFieldValue","validator","rule","resolve","Reg","showMsg","setShowMsg","msg","span2","user","email","first_name","last_name","img","require","App","app","header","content","exact","path","footer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d0ee426.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1C_0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Poster_container__HB_FZ\",\"preloader\":\"Poster_preloader__2wazO\",\"btn\":\"Poster_btn__3WIXQ\",\"cards_block\":\"Poster_cards_block__3cULz\",\"card\":\"Poster_card__16G8M\",\"pagination\":\"Poster_pagination__126Ou\",\"card_content\":\"Poster_card_content__2xqWQ\",\"attach\":\"Poster_attach__1GlWB\",\"photo_container\":\"Poster_photo_container__1vFxw\",\"photo\":\"Poster_photo__3oR9C\",\"title\":\"Poster_title__2B4Wg\"};","module.exports = __webpack_public_path__ + \"static/media/Brend.0c59dd11.png\";","import axios from 'axios'\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\nexport const axiosAllowAny = axios.create({\r\n    // baseURL: 'http://skyteam-client.ru/',\r\n    baseURL: \"http://localhost:8000\",\r\n    timeout: 50000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'accept': 'application/json'\r\n    }\r\n});\r\n\r\naxiosAllowAny.interceptors.response.use(\r\n    res => res,\r\n    error => Promise.reject(error.response)\r\n);\r\n\r\n\r\nexport const axiosAuth = axios.create({\r\n    // baseURL: 'http://skyteam-client.ru/',\r\n    baseURL: \"http://localhost:8000\",\r\n    timeout: 50000,\r\n});\r\n\r\naxiosAuth.interceptors.response.use(\r\n    res => res,\r\n    error => Promise.reject(error.response)\r\n);\r\n\r\nexport const getAllHeaders = () => {\r\n    let csrf = Cookies.get('csrftoken')\r\n    return {\r\n        headers: {\r\n            'Authorization': \"JWT \" + localStorage.getItem('token'),\r\n            'Content-Type': 'application/json',\r\n            'accept': 'application/json',\r\n            // 'X-CSRFToken': csrf\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport const getPartHeaders = () => {\r\n    let csrf = Cookies.get('csrftoken')\r\n    return {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'accept': 'application/json',\r\n            // 'X-CSRFToken': csrf\r\n        }\r\n    }\r\n    \r\n}","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport css from './Login.module.css';\r\nimport {axiosAllowAny, getPartHeaders} from '../../api/api';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 7,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 7,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n  const onFinish = values => {\r\n    props.onFinish(values);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    props.onFinishFailed(errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: false,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Логин\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Пожалуйста, введите имя пользователя!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Пожалуйста, введите Ваш пароль!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Запомнить меня</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Войти\r\n        </Button> <br/>\r\n        Или <a href=\"/signup/\">зарегистрируйтесь сейчас!</a>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst Login = (props) => {\r\n    const [redirect, setRedirect] = useState(!!localStorage.getItem(\"token\"));\r\n    \r\n    const onFinish = (values) => {\r\n        let config = getPartHeaders();\r\n        axiosAllowAny.post('/user/login/',\r\n        {\r\n            username: values.username,\r\n            password: values.password\r\n        }, config)\r\n        .then(response => {\r\n            if (response.status === 200)\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                setRedirect(true);\r\n                \r\n        })\r\n        .catch(err => {\r\n                alert(\"Неверное имя пользователя или пароль\\nВозможно Ваш аккаунт еще не активирован.\")\r\n        });\r\n\r\n    }\r\n    \r\n    const onFinishFailed = (err) => {\r\n        alert(err);\r\n    }\r\n\r\n    return (\r\n            !redirect?\r\n                <div className={css.container}>\r\n                    <LoginForm onFinish={onFinish} onFinishFailed={onFinishFailed}/>\r\n                </div>\r\n            :\r\n                <Redirect to=\"/post_parser/\"/>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, auth, redirect, ...rest }) => {\r\n    const [is_auth, _] = useState(!!localStorage.getItem('token'));\r\n\r\n    return (<Route\r\n                {...rest}\r\n                render={\r\n                    props => is_auth === true\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/login/'/>\r\n                }\r\n  />)\r\n}\r\nexport default PrivateRoute;","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n      <div>  \r\n        <div className=\"loader\">\r\n            <span style={{\"--i\": 1}}></span>\r\n            <span style={{\"--i\": 2}}></span>\r\n            <span style={{\"--i\": 3}}></span>\r\n            <span style={{\"--i\": 4}}></span>\r\n            <span style={{\"--i\": 5}}></span>\r\n            <span style={{\"--i\": 6}}></span>\r\n            <span style={{\"--i\": 7}}></span>\r\n        </div>\r\n        <svg>\r\n            <filter id=\"gooey\">\r\n                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\r\n                <feColorMatrix values=\"\r\n                    1 0 0 0 0\r\n                    0 1 0 0 0\r\n                    0 0 1 0 0\r\n                    0 0 0 20 -10\r\n                \"/>\r\n            </filter>\r\n        </svg>\r\n      </div>      \r\n    );\r\n  }\r\n  \r\n  export default Preloader;","import React, { useState, useEffect } from \"react\";\r\nimport css from './Poster.module.css';\r\nimport moment from \"moment\";\r\nimport locale from  'antd/es/date-picker/locale/ru_RU';\r\nimport ll from 'antd/es/date-picker/locale/en_US';\r\nimport {axiosAuth, getAllHeaders} from '../../api/api';\r\nimport { Form,\r\n         Input, \r\n         Button,\r\n         DatePicker,\r\n         InputNumber,\r\n         Card,\r\n         Pagination   } from 'antd';\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nmoment.locale('ru');\r\n  \r\nconst FilterForm= (props) => {\r\n    const [form] = Form.useForm();\r\n    const formLayout = 'horizontal';\r\n  \r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 11 },\r\n            wrapperCol: { span: 18 },\r\n          }\r\n        : null;\r\n  \r\n    const buttonItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            wrapperCol: { span: 14, offset: 11 },\r\n          }\r\n        : null;\r\n  \r\n    return (\r\n      <div>\r\n        <Form\r\n          {...formItemLayout}\r\n          layout={formLayout}\r\n          form={form}\r\n          initialValues={{ layout: formLayout }}\r\n          onFinish={props.onFinish}\r\n          onFinishFailed={props.onFinishFailed}\r\n        //   style={{border: \"1px solid black\"}}\r\n        >\r\n          <Form.Item \r\n            label=\"Введите ключевые слова\"\r\n            name=\"q\"\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Пожалуйста, введите поисковый запрос!',\r\n            },\r\n            ]}>\r\n            <Input onChange = {props.onQueryChange} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Дата выхода постов\" name=\"time\">\r\n            <RangePicker \r\n                         placeholder={[\"от\", \"до\"]}\r\n                         size=\"middle\"\r\n                         inputReadOnly={true}\r\n                         onCalendarChange={props.onCalendarChange}/>\r\n          </Form.Item>\r\n          <Form.Item label=\"Количество\" name=\"count\">\r\n            <InputNumber min={1}\r\n                         max={1000}\r\n                         onChange = {props.onCountChange} />\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">Получить посты</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nconst Poster = (props) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [count, setCount] = useState(3);\r\n    const [startTime, setStartTime] = useState(null);\r\n    const [endTime, setEndTime] = useState(null);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [is_show, setShow] = useState(true);\r\n    const [preloader, setPreloader] = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [start, setStart] = useState(0);\r\n    const [end, setEnd] = useState(19);\r\n\r\n    const pageSize = 20;\r\n\r\n    const unixToDate = (unix_time) => {\r\n        let unix_timestamp = 1549312452\r\n        // Create a new JavaScript Date object based on the timestamp\r\n        // multiplied by 1000 so that the argument is in milliseconds, not seconds.\r\n        let date = new Date(unix_time * 1000);\r\n        // Hours part from the timestamp\r\n        let hours = date.getHours();\r\n        // Minutes part from the timestamp\r\n        let minutes = \"0\" + date.getMinutes();\r\n        let day = date.getDate();\r\n        day = Number(day) < 10 ? \"0\"+day : day;\r\n        let month = date.getMonth();\r\n        month = \"\"+(Number(month)+1)\r\n        month = Number(month) < 10? \"0\"+month: month;\r\n        let year = date.getFullYear();\r\n        // Will display time in 10:30:23 format\r\n        let formattedTime = day +'.'+month+'.'+year+' '+ hours + ':' + minutes.substr(-2);\r\n        return formattedTime;\r\n    }\r\n\r\n    const getTitle = (v) => {\r\n        console.log(v);\r\n        return (<div className={css.title}>\r\n                    <a target=\"_blank\" href={`https://vk.com/public${Math.abs(v.owner_id)}`}>\r\n                        {v.name}\r\n                    </a>\r\n                    <span>\r\n                        {unixToDate(v.date)}\r\n                    </span>\r\n                </div>)\r\n    }\r\n\r\n\r\n\r\n    const getMaxPhoto = (array) => {\r\n        if (array.length === 1) return array[0];\r\n        let max = array.reduce((a, b) => {\r\n            return a.height > b.height? a : b\r\n        })\r\n        return max\r\n    }\r\n\r\n    const onPaginationChange = value => {\r\n      let s = (value -1) * pageSize;\r\n      let e = value * pageSize;\r\n      $(\"html, body\").animate({ scrollTop: 0 }, 1000);\r\n      setStart(s);\r\n      setEnd(e);\r\n    }\r\n\r\n    const onQueryChange = (e) => {\r\n        setQuery(e.currentTarget.value);\r\n    }\r\n    const onCountChange = (e) =>{\r\n        setCount(e);\r\n    }\r\n    const onCalendarChange = (dates, datesStrings) => {\r\n        setStartTime(datesStrings[0]);\r\n        setEndTime(datesStrings[1]);\r\n    }\r\n    const onFinish = (values) => {\r\n        setShow(false);\r\n        setPreloader(true);\r\n        let config = getAllHeaders();\r\n        let slug = `posts/get/?q=${query}`;\r\n        if (!!startTime) slug += `&start_time=${startTime}`;\r\n        if (!!endTime) slug += `&end_time=${endTime}`;\r\n        if (!!count) slug += `&count=${count}`;\r\n        axiosAuth.get(slug, config)\r\n        .then(response => {\r\n            if (response.status === 200){\r\n                setPosts(response.data)\r\n                setPreloader(false);\r\n            }\r\n        })\r\n        .catch(err => {\r\n                alert(\"Ваш аккаунт больше недействителен!\");\r\n                localStorage.removeItem(\"token\");\r\n                setPreloader(false);\r\n                setRedirect(true);\r\n        })\r\n    }\r\n    const onFinishFailed = (err) => {\r\n        return\r\n    }\r\n\r\n    const onToggleForm = () => {\r\n        setShow(!is_show)\r\n    }\r\n\r\n    return (\r\n        !redirect?\r\n            <div className={css.container}>\r\n                {\r\n                is_show?\r\n                    <div className={css.form}>\r\n                    <FilterForm\r\n                    onQueryChange = {onQueryChange}\r\n                    onCountChange = {onCountChange}\r\n                    onCalendarChange = {onCalendarChange}\r\n                    onFinish = {onFinish}\r\n                    onFinishFailed = {onFinishFailed}/>\r\n                    <Button onClick={onToggleForm}>Скрыть</Button>\r\n                    </div>\r\n                :\r\n                    <Button disabled = {preloader? true : false}\r\n                            className={css.btn}\r\n                            type=\"primary\"\r\n                            onClick={onToggleForm}>Показать</Button>\r\n                }\r\n                {\r\n                    preloader?\r\n                        <div className={css.preloader}>\r\n                            <Preloader/>\r\n                        </div>\r\n                    :\r\n                        posts.length>0?\r\n                            <div className={css.cards_block} style={{animation: \"fadeIn 1s\"}}>\r\n                            {\r\n                            posts.slice(start, end).map((v, i) => {\r\n                                return (\r\n                                    <div key = {i} className={css.card}>\r\n                                        <Card style={{\"backgroundColor\": \"#EDEEF0\"}} title={getTitle(v)}>\r\n                                            <div className={css.card_content}>\r\n                                                    <div className = {css.text}>\r\n                                                        {v.text}\r\n                                                    </div>\r\n                                                        {\r\n                                                        v.attachments?\r\n                                                        <div className={css.attach}>\r\n                                                            {\r\n                                                                v.attachments.map((av, ai) => {\r\n                                                                    return av.type === \"photo\"\r\n                                                                    ?\r\n                                                                    <div key={ai} className={css.photo_container}>\r\n                                                                        <a target=\"_blank\" href={getMaxPhoto(av.photo.sizes).url}>\r\n                                                                        <img className={css.photo} \r\n                                                                            src={getMaxPhoto(av.photo.sizes).url}\r\n                                                                        />\r\n                                                                        </a>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                        null\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                        :\r\n                                                            null\r\n                                                        }\r\n                                            </div>\r\n                                        </Card>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                                <div className={css.pagination}>\r\n                                    <Pagination\r\n                                        defaultCurrent={1}\r\n                                        defaultPageSize={pageSize}\r\n                                        onChange={onPaginationChange}\r\n                                        total={posts.length}\r\n                                        />\r\n                                </div>\r\n                            </div>\r\n                        :\r\n                            null\r\n                }\r\n            </div>\r\n        :\r\n            <Redirect to = \"/login/\"/>\r\n    )\r\n}\r\n\r\nexport default Poster;","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport css from './Reg.module.css';\r\nimport {axiosAllowAny, getPartHeaders} from '../../api/api';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 11,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 11,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst RegForm = (props) => {\r\n  const onFinish = values => {\r\n    props.onFinish(values);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    props.onFinishFailed(errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: false,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Логин\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Пожалуйста, введите имя пользователя!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Имя\"\r\n        name=\"first_name\"\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Фамилия\"\r\n        name=\"last_name\"\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'Некорректный email!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Пожалуйста, введите пароль!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Повторите пароль\"\r\n        name=\"password_again\"\r\n        dependencies={['password']}\r\n        rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject('Пароли не совпадают!');\r\n              },\r\n            }),\r\n          ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Зарегистрироваться\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst Reg = (props) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [showMsg, setShowMsg] = useState(false);\r\n    \r\n    const onRedirectBtnClick = () => {\r\n        setRedirect(true);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        let config = getPartHeaders(); \r\n        axiosAllowAny.post('/user/create/',\r\n        {\r\n            user:{\r\n                username: values.username,\r\n                password: values.password,\r\n                email: values.email,\r\n                first_name: values.first_name? values.first_name : null,\r\n                last_name: values.last_name? values.last_name : null,\r\n            }\r\n            \r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) setShowMsg(true);\r\n                \r\n        })\r\n        .catch(err => {\r\n            if (err.status === 400)\r\n                alert(\"Аккаунт с такими данными уже зарегистрирован.\")\r\n        });\r\n\r\n    }\r\n    \r\n    const onFinishFailed = (err) => {\r\n        alert(err);\r\n    }\r\n\r\n    return (\r\n            !redirect?\r\n                    <div className={css.container}>\r\n                        {!showMsg?\r\n                            <RegForm onFinish={onFinish} onFinishFailed={onFinishFailed}/>\r\n                         :\r\n                            <div className={css.msg}>\r\n                                <span className={css.span}>Вы успешно зарегистрированы!</span><br/>\r\n                                <span className={css.span2}>Ожидайте, пока Ваш аккаунт активируют.</span><br/>\r\n                                <Button onClick={onRedirectBtnClick}>ОК</Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            :\r\n                <Redirect to=\"/login/\"/>\r\n    )\r\n}\r\n\r\nexport default Reg;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from './components/Login/Login';\nimport PrivateRoute from './routes/PrivateRoute';\nimport Poster from './components/Poster/Poster';\nimport {axiosAuth} from \"./api/api\";\nimport css from \"./App.module.css\";\nimport Reg from './components/Reg/Reg';\n\nconst img = require(\"./assets/Brend.png\");\n\nconst auth = () => {\n  const res = axiosAuth.get('/user/current_user/')\n  .then(response => {\n    if(response.status === 200) {return true}\n    else return false\n  })\n  .catch(err => false)\n  return res\n}\n\nconst App = () => (\n  <div className={css.app}>\n    <div className={css.header}>\n        <img src={img}/>\n    </div>\n    <div className={css.content}>\n      <Switch>\n        <Route exact path={\"/login/\"} component={Login}/>\n        <PrivateRoute path={\"/post_parser/\"} auth={auth} component={Poster}/>\n        <Route exact path={\"/signup/\"} component={Reg}/>\n        <Route path={\"/\"} component={Login}/>\n      </Switch>\n    </div>\n    <div className={css.footer}>\n        <span>ПОИСК</span><span className={css.s}>КЛИЕНТОВ</span>\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__u1aHy\",\"header\":\"App_header__1G-pR\",\"content\":\"App_content__m3h3y\",\"footer\":\"App_footer__2vTup\",\"s\":\"App_s__udsM3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Reg_container__3yhKJ\",\"msg\":\"Reg_msg__55YIn\",\"span\":\"Reg_span__1XTc1\",\"span2\":\"Reg_span2__uP_qQ\"};"],"sourceRoot":""}